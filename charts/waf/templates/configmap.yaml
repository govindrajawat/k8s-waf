apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "waf.fullname" . }}-config
  labels:
    {{- include "waf.labels" . | nindent 4 }}
data:
  nginx.conf: |
    user nginx;
    worker_processes {{ .Values.nginx.config.workerProcesses }};
    
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    
    events {
        worker_connections {{ .Values.nginx.config.workerConnections }};
    }
    
    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;
        
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';
        
        access_log  /var/log/nginx/access.log  main;
        
        sendfile        on;
        keepalive_timeout  {{ .Values.nginx.config.keepaliveTimeout }};
        
        client_max_body_size {{ .Values.nginx.config.clientMaxBodySize }};
        server_names_hash_bucket_size {{ .Values.nginx.config.serverNamesHashBucketSize }};
        
        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/modsecurity.d/*.conf;
    }

  main.conf: |
    # ModSecurity configuration
    SecRuleEngine {{ .Values.modsecurity.secRuleEngine }}
    SecRequestBodyLimit {{ .Values.modsecurity.secRequestBodyLimit }}
    SecRequestBodyNoFilesLimit {{ .Values.modsecurity.secRequestBodyNoFilesLimit }}
    SecRequestBodyInMemoryLimit {{ .Values.modsecurity.secRequestBodyInMemoryLimit }}
    SecResponseBodyLimit {{ .Values.modsecurity.secResponseBodyLimit }}
    SecPcreMatchLimit {{ .Values.modsecurity.secPcreMatchLimit }}
    SecPcreMatchLimitRecursion {{ .Values.modsecurity.secPcreMatchLimitRecursion }}
    SecAuditEngine RelevantOnly
    SecAuditLogRelevantStatus "{{ .Values.modsecurity.auditLogRelevantStatus }}"
    SecAuditLogParts {{ .Values.modsecurity.auditLogParts }}
    SecAuditLogType Serial
    SecAuditLog /var/log/modsecurity/audit.log
    SecAuditLogStorageDir {{ .Values.modsecurity.auditLogStorageDir }}
    
    # Include OWASP CRS rules
    Include /etc/nginx/modsecurity.d/owasp-crs/crs-setup.conf
    Include /etc/nginx/modsecurity.d/owasp-crs/rules/*.conf
    
    # Custom rules
    SecRule REQUEST_HEADERS:User-Agent "nikto" "id:1000,phase:1,log,deny,status:403,msg:'Nikto scan detected'"
    SecRule REQUEST_HEADERS:User-Agent "sqlmap" "id:1001,phase:1,log,deny,status:403,msg:'Sqlmap scan detected'"
    SecRule REQUEST_HEADERS:User-Agent "w3af" "id:1002,phase:1,log,deny,status:403,msg:'w3af scan detected'"

  owasp-crs.conf: |
    # OWASP CRS configuration
    SecAction \
      "id:900000,\
      phase:1,\
      nolog,\
      pass,\
      t:none,\
      setvar:tx.crs_setup_version=340"
    
    # Enable the rules
    SecAction \
      "id:900990,\
      phase:1,\
      nolog,\
      pass,\
      t:none,\
      setvar:tx.crs_exclusions_cpanel=1,\
      setvar:tx.crs_exclusions_dokuwiki=1,\
      setvar:tx.crs_exclusions_drupal=1,\
      setvar:tx.crs_exclusions_nextcloud=1,\
      setvar:tx.crs_exclusions_phpbb=1,\
      setvar:tx.crs_exclusions_phpmyadmin=1,\
      setvar:tx.crs_exclusions_wordpress=1,\
      setvar:tx.crs_exclusions_xenforo=1"
    
    # Default action for rules
    SecDefaultAction "phase:1,log,auditlog,pass"
    SecDefaultAction "phase:2,log,auditlog,pass"
    
    # Include OWASP CRS rules
    Include /etc/nginx/modsecurity.d/owasp-crs/crs-setup.conf
    Include /etc/nginx/modsecurity.d/owasp-crs/rules/*.conf