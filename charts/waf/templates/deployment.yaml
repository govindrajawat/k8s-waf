apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "waf.fullname" . }}
  labels:
    {{- include "waf.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "waf.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.monitoring.prometheus.port }}"
        prometheus.io/path: "{{ .Values.monitoring.prometheus.path }}"
      labels:
        {{- include "waf.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.monitoring.prometheus.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: config
              mountPath: /etc/nginx/modsecurity.d
              subPath: modsecurity
            - name: modsecurity-audit
              mountPath: /var/log/modsecurity/audit
            - name: modsecurity-data
              mountPath: /var/log/modsecurity/data
            - name: tls
              mountPath: /etc/nginx/ssl
              readOnly: true
          env:
            - name: NGINX_WORKER_PROCESSES
              value: {{ .Values.nginx.config.workerProcesses | quote }}
            - name: NGINX_WORKER_CONNECTIONS
              value: {{ .Values.nginx.config.workerConnections | quote }}
      {{- if .Values.logging.enabled }}
      {{- if .Values.logging.sidecar.enabled }}
        - name: logging-sidecar
          image: {{ .Values.logging.sidecar.image }}:{{ .Values.logging.sidecar.tag }}
          imagePullPolicy: IfNotPresent
          volumeMounts:
            - name: modsecurity-audit
              mountPath: /var/log/modsecurity/audit
            - name: modsecurity-data
              mountPath: /var/log/modsecurity/data
      {{- end }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "waf.fullname" . }}-config
        - name: modsecurity-audit
          emptyDir: {}
        - name: modsecurity-data
          emptyDir: {}
        - name: tls
          secret:
            secretName: {{ include "waf.fullname" . }}-tls
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}